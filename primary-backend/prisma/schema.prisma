// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(uuid())
  email              String              @unique
  fullname           String
  password           String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  role               UserRole            @default(PARTICIPANT)
  profilePicture     String?
  profile            Profile?
}

enum UserRole {
  ADMIN
  PARTICIPANT
}

model Profile {
  id                 String         @id @default(uuid())
  country            String?
  gender             Gender?
  location           String?
  birthday           DateTime?
  bio                String?
  education          Education[]
  workExperience     WorkExperience[]
  skills             String[]       
  socialLinks        SocialLinks?   
  user               User           @relation(fields: [userId], references: [id])
  userId             String         @unique
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model Education {
  id                 String    @id @default(uuid())
  institute          String
  degree             String
  subject            String
  startDate          DateTime
  endDate            DateTime?
  profileId          String
  profile            Profile   @relation(fields: [profileId], references: [id])
}

model WorkExperience {
  id                 String    @id @default(uuid())
  company            String
  role               String
  location           String
  startDate          DateTime
  endDate            DateTime?
  profileId          String    @unique
  profile            Profile   @relation(fields: [profileId], references: [id])
}

model SocialLinks {
  id                 String    @id @default(uuid())
  instagram          String?
  github             String?
  twitter            String?
  linkedin           String?
  personalWebsite    String?
  other              String?
  profileId          String    @unique
  profile            Profile   @relation(fields: [profileId], references: [id])
}
